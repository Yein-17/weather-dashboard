name: üöÄ Deploy to EC2

on:
  workflow_run:
    workflows: ["CI Pipeline with GHCR"]
    types: [completed]

jobs:
  deploy:
    name: üöÄ Deploy to EC2
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: üßæ Decode SSH Key and Prepare
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: üîê Connect to EC2 and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key_path: ./ec2_key.pem
          script: |
            # Force lowercase for Docker username
            USERNAME=$(echo "${{ github.actor }}" | tr '[:upper:]' '[:lower:]')
            FRONTEND_IMAGE=ghcr.io/$USERNAME/weather-frontend
            BACKEND_IMAGE=ghcr.io/$USERNAME/weather-backend

            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u $USERNAME --password-stdin

            # Pull images from GHCR
            docker pull $FRONTEND_IMAGE:latest
            docker pull $BACKEND_IMAGE:latest

            # Stop and remove old containers if they exist
            docker stop weather-frontend || true
            docker rm weather-frontend || true
            docker stop weather-backend || true
            docker rm weather-backend || true

            # Run new containers
            docker run -d \
              --name weather-frontend \
              -p 80:3000 \
              $FRONTEND_IMAGE:latest

            docker run -d \
              --name weather-backend \
              -p 5000:5000 \
              -e WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }} \
              $BACKEND_IMAGE:latest
