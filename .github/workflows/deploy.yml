name: üöÄ Deploy to EC2

on:
  workflow_run:
    workflows: ["CI Pipeline with GHCR"]
    types:
      - completed

jobs:
  deploy:
    name: üöÄ Deploy to EC2
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: [build-and-push]

    steps:
      - name: üßæ Decode SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: üîê Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Pull latest images
            docker pull ghcr.io/${{ github.actor }}/weather-frontend:latest
            docker pull ghcr.io/${{ github.actor }}/weather-backend:latest

            # Stop existing containers if they exist
            docker stop weather-frontend || true
            docker rm weather-frontend || true
            docker stop weather-backend || true
            docker rm weather-backend || true

            # Run frontend (on port 80 ‚Üí 3000)
            docker run -d \
              --name weather-frontend \
              -p 80:3000 \
              ghcr.io/${{ github.actor }}/weather-frontend:latest

            # Run backend (on port 5000 ‚Üí 5000)
            docker run -d \
              --name weather-backend \
              -p 5000:5000 \
              -e WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }} \
              ghcr.io/${{ github.actor }}/weather-backend:latest

